import sys
from abc import ABC

from problemset import AbstractProblemset


class Problemset(AbstractProblemset, ABC):

    @staticmethod
    def default_pose(problemset):
        return [0.0, 0.5, 0.5, 0.0, 0.0, 0.0]

    @staticmethod
    def default_joint_values(problemset):
        return [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

    @staticmethod
    def states(problemset):
        if problemset == "bookshelves":
            n_states = 12
            states = [list() for _ in range(n_states)]
            states[0] = [-1.578, -1.578, 0, 0, 0, 0]
            states[1] = [-3.092056850819366, -1.9698706924783582, -0.9676059209633451, -1.6861934904543876, 2.060179627053768, 1.234935864387694]
            states[2] = [-2.663820232629123, -2.194555332136998, -0.6154708526922845, -1.9698454195435686, 2.101554503196192, 2.290713693290865]
            states[3] = [-3.4191163389733283, -2.294237797273783, -0.3835483619452735, -2.275327554006409, 1.730120349610842, 2.292908239666849]
            states[4] = [-0.5353893591884503, -0.8191490171678423, 1.1005914337731868, 5.883811506348459, -4.400132716711118, -4.757956313564763]
            states[5] = [-0.08436517465108274, -0.9602698455366261, 1.3714961739217213, 4.477656555872506, -2.1211908583364854, -0.3465566147511544]
            states[6] = [0.23993748409670962, -0.779517844077487, 1.0521555533590745, 6.034167037716082, -4.450341688411703, -4.759428897226286]
            states[7] = [-0.5071439050817315, -1.3731318537200201, 0.48756180486909045, 0.37845941232507224, 0.00987986784126615, 0.1334776180988649]
            states[8] = [4.175186506746471, -2.366151319157636, -1.393872583700437, 2.074941881900291, 4.828817954307027, 3.704012711717094]
            states[9] = [3.4047456152114886, -1.5411482316106826, -1.9317361809038165, 4.4301708474262105, 5.687051617433735, 4.669033978105537]
            states[10] = [-1.0134840362055058, -0.7750392131670687, 0.5644467662671233, -0.016414804186924686, -0.0015339130707234757, 0.0007755138818968637]
            states[11] = [0.7654192050089095, -0.8439873347273738, 0.9013713739939475, -1.9100974089637022, -2.5294310029718754, 0.46645986618069685]

        elif problemset == "industrial":
            n_states = 100
            states = [list() for _ in range(n_states)]
            states[0] = [-1.578, -1.578, 0, 0, 0, 0]
            states[1] = [0.4013672048370986, -1.6878056769011394, 1.1177386391513888, -1.5943233518981965, -0.816752086211143, 0.08835504420274154]
            states[2] = [-1.9287061077403904, -1.4281354137637188, 0.6038045743469215, -0.9699943311452384, -1.002584041961431, -0.4831293839176354]
            states[3] = [-1.603687493717159, -1.3749979010914137, 0.624238885225218, -1.2737113215513653, -0.9836122136091396, -0.5094219490089181]
            states[4] = [-0.09618091545326236, -1.646913667854468, 1.2301884609901674, -1.3007145090883911, -0.9814376968954052, -0.5091538294726569]
            states[5] = [-0.3229351530810373, -1.4420247963969377, 0.9495182684453404, -1.469791527094406, -1.8180981506984155, -0.5806849289954321]
            states[6] = [-0.1422316204788497, -1.4244832562019099, 0.8258730902095492, -1.126235700959872, -1.7685673254265897, -0.5956613396817684]
            states[7] = [-0.9686162306332282, -1.3189068774339205, 0.8887329623521621, -1.2405571363715833, -1.677742012142283, -1.3952308744319266]
            states[8] = [0.6741154454678632, -1.1342007292487155, 0.3195164579915672, -0.7375459701998857, -1.604859458986322, -1.3194836642674819]
            states[9] = [-1.9249775378636007, -1.8529688610900832, 1.6358920957888212, -2.349581889702728, -1.0628525836094842, -0.13960430892749198]
        return n_states, states

    @staticmethod
    def joint_names(problemset):
        return [
            "shoulder_pan_joint", 
            "shoulder_lift_joint", 
            "elbow_joint", 
            "wrist_1_joint", 
            "wrist_2_joint",
            "wrist_3_joint"
        ]

    @staticmethod
    def pos_and_orn(problemset):
        if problemset == "industrial":
            return [0.0, 0.0, 0.0], [-3.1415, -3.1415, 0.0, 1.0]
        elif problemset == "bookshelves":
            return [0.0, 0.0, 0.0], [-3.1415, -3.1415, 0.0, 1.0]
        else:
            sys.exit("Invalid problemset")

    @staticmethod
    def object_position(problemset):
        if problemset == "industrial":
            return [-0.2, 0.0, 0.08]
        elif problemset == "bookshelves":
            return [0.95, -0.15, 0.834]
        else:
            sys.exit("Invalid problemset")

    @staticmethod
    def planner_params(problemset):
        if problemset == "industrial":
            return {
                "sigma_obs": 0.05,
                "epsilon": 0.05,
                "lengthscales": [100, 100, 100, 600, 600, 600],
                "variance": 0.05,
                "alpha": 100,
                "num_samples": 7,
                "num_inducing": 10,
                "learning_rate": 0.09,
                "num_steps": 170,
                "time_spacing_X": 70,
                "time_spacing_Xnew": 150
            }
        elif problemset == "bookshelves":
            return {
                "sigma_obs": 0.005,
                "epsilon": 0.05,
                "lengthscale": 100.0,
                "variance": 0.5,
                "alpha": 3.0,
                "num_samples": 7,
                "num_inducing": 10,
                "learning_rate": 0.1,
                "num_steps": 100,
                "time_spacing_X": 70,
                "time_spacing_Xnew": 150
            }
        else:
            sys.exit("Invalid problemset")